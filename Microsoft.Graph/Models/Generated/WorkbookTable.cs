// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Workbook Table.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class WorkbookTable : Entity
    {
    
        /// <summary>
        /// Gets or sets highlight first column.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "highlightFirstColumn", Required = Newtonsoft.Json.Required.Default)]
        public bool? HighlightFirstColumn { get; set; }
    
        /// <summary>
        /// Gets or sets highlight last column.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "highlightLastColumn", Required = Newtonsoft.Json.Required.Default)]
        public bool? HighlightLastColumn { get; set; }
    
        /// <summary>
        /// Gets or sets name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "name", Required = Newtonsoft.Json.Required.Default)]
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets show banded columns.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "showBandedColumns", Required = Newtonsoft.Json.Required.Default)]
        public bool? ShowBandedColumns { get; set; }
    
        /// <summary>
        /// Gets or sets show banded rows.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "showBandedRows", Required = Newtonsoft.Json.Required.Default)]
        public bool? ShowBandedRows { get; set; }
    
        /// <summary>
        /// Gets or sets show filter button.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "showFilterButton", Required = Newtonsoft.Json.Required.Default)]
        public bool? ShowFilterButton { get; set; }
    
        /// <summary>
        /// Gets or sets show headers.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "showHeaders", Required = Newtonsoft.Json.Required.Default)]
        public bool? ShowHeaders { get; set; }
    
        /// <summary>
        /// Gets or sets show totals.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "showTotals", Required = Newtonsoft.Json.Required.Default)]
        public bool? ShowTotals { get; set; }
    
        /// <summary>
        /// Gets or sets style.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "style", Required = Newtonsoft.Json.Required.Default)]
        public string Style { get; set; }
    
        /// <summary>
        /// Gets or sets columns.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "columns", Required = Newtonsoft.Json.Required.Default)]
        public IWorkbookTableColumnsCollectionPage Columns { get; set; }
    
        /// <summary>
        /// Gets or sets rows.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "rows", Required = Newtonsoft.Json.Required.Default)]
        public IWorkbookTableRowsCollectionPage Rows { get; set; }
    
        /// <summary>
        /// Gets or sets sort.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sort", Required = Newtonsoft.Json.Required.Default)]
        public WorkbookTableSort Sort { get; set; }
    
        /// <summary>
        /// Gets or sets worksheet.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "worksheet", Required = Newtonsoft.Json.Required.Default)]
        public WorkbookWorksheet Worksheet { get; set; }
    
    }
}

