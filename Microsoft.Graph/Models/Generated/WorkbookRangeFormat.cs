// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Workbook Range Format.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class WorkbookRangeFormat : Entity
    {
    
        /// <summary>
        /// Gets or sets column width.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "columnWidth", Required = Newtonsoft.Json.Required.Default)]
        public double? ColumnWidth { get; set; }
    
        /// <summary>
        /// Gets or sets horizontal alignment.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "horizontalAlignment", Required = Newtonsoft.Json.Required.Default)]
        public string HorizontalAlignment { get; set; }
    
        /// <summary>
        /// Gets or sets row height.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "rowHeight", Required = Newtonsoft.Json.Required.Default)]
        public double? RowHeight { get; set; }
    
        /// <summary>
        /// Gets or sets vertical alignment.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "verticalAlignment", Required = Newtonsoft.Json.Required.Default)]
        public string VerticalAlignment { get; set; }
    
        /// <summary>
        /// Gets or sets wrap text.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "wrapText", Required = Newtonsoft.Json.Required.Default)]
        public bool? WrapText { get; set; }
    
        /// <summary>
        /// Gets or sets borders.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "borders", Required = Newtonsoft.Json.Required.Default)]
        public IWorkbookRangeFormatBordersCollectionPage Borders { get; set; }
    
        /// <summary>
        /// Gets or sets fill.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "fill", Required = Newtonsoft.Json.Required.Default)]
        public WorkbookRangeFill Fill { get; set; }
    
        /// <summary>
        /// Gets or sets font.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "font", Required = Newtonsoft.Json.Required.Default)]
        public WorkbookRangeFont Font { get; set; }
    
        /// <summary>
        /// Gets or sets protection.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "protection", Required = Newtonsoft.Json.Required.Default)]
        public WorkbookFormatProtection Protection { get; set; }
    
    }
}

